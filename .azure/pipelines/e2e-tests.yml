trigger: none

jobs:
- job: Host_Windows
  pool:
    vmImage: vs2017-win2016
  strategy:
    maxParallel: 8
    matrix:
      Portable_Node8:
        Test.RuntimeIdentifier: none
        Node.Version: 8.x
      Portable_Node10:
        Test.RuntimeIdentifier: none
        Node.Version: 10.x
      SelfContainedWindows_Node8:
        Test.RuntimeIdentifier: win-x64
        Node.Version: 8.x
      SelfContainedWindows_Node10:
        Test.RuntimeIdentifier: win-x64
        Node.Version: 10.x
      SelfContainedLinux_Node8:
        Test.RuntimeIdentifier: linux-x64
        Node.Version: 8.x
      SelfContainedLinux_Node10:
        Test.RuntimeIdentifier: linux-x64
        Node.Version: 10.x
      SelfContainedMacOs_Node8:
        Test.RuntimeIdentifier: osx-x64
        Node.Version: 8.x
      SelfContainedMacOs_Node10:
        Test.RuntimeIdentifier: osx-x64
        Node.Version: 10.x
  steps:
  - task: NodeTool@0
    displayName: Install Node $(Node.Version)
    inputs:
      versionSpec: $(Node.Version)
  - powershell: |
      test/Cli.FunctionalTests/run-tests.ps1 -ci -CliManifestName $(CliManifestName) -RestoreSources $(PB_RestoreSource) -AccessTokenSuffix '$(AccessTokenSuffix)' -AssetRootUrl $(PB_AssetRootUrl) -ProdConManifestUrl $env:PRODCONMANIFESTURL -TestRuntimeIdentifier $(Test.RuntimeIdentifier) -AdditionalRestoreSources $env:ADDITIONALRESTORESOURCES

    condition: ne(variables['PB_SkipTests'], 'true')
    displayName: Run E2E tests
  - task: PublishTestResults@2
    displayName: Publish test results
    condition: always()
    inputs:
      testRunner: vstest
      testResultsFiles: 'artifacts/logs/**/*.trx'
- job: Host_macOS
  pool:
    vmImage: macOS-10.14
  strategy:
    maxParallel: 4
    # The ASP.NET Core 2.1.X templates are incompatible with Node10 on macOS
    # https://github.com/aspnet/Templating/issues/608
    matrix:
      Portable_Node8:
        Test.RuntimeIdentifier: none
        Node.Version: 8.x
      SelfContainedWindows_Node8:
        Test.RuntimeIdentifier: win-x64
        Node.Version: 8.x
      SelfContainedLinux_Node8:
        Test.RuntimeIdentifier: linux-x64
        Node.Version: 8.x
      SelfContainedMacOs_Node8:
        Test.RuntimeIdentifier: osx-x64
        Node.Version: 8.x
  steps:
  - task: NodeTool@0
    displayName: Install Node $(Node.Version)
    inputs:
      versionSpec: $(Node.Version)
  - powershell: |
      test/Cli.FunctionalTests/run-tests.ps1 -ci -CliManifestName $(CliManifestName) -RestoreSources $(PB_RestoreSource) -AccessTokenSuffix '$(AccessTokenSuffix)' -AssetRootUrl $(PB_AssetRootUrl) -ProdConManifestUrl $env:PRODCONMANIFESTURL -TestRuntimeIdentifier $(Test.RuntimeIdentifier) -AdditionalRestoreSources $env:ADDITIONALRESTORESOURCES

    condition: ne(variables['PB_SkipTests'], 'true')
    displayName: Run E2E tests
  - task: PublishTestResults@2
    displayName: Publish test results
    condition: always()
    inputs:
      testRunner: vstest
      testResultsFiles: 'artifacts/logs/**/*.trx'
- job: Host_Linux
  pool:
    vmImage: ubuntu-16.04
  strategy:
    maxParallel: 8
    matrix:
      Portable_Node8:
        Test.RuntimeIdentifier: none
        Node.Version: 8.x
      Portable_Node10:
        Test.RuntimeIdentifier: none
        Node.Version: 10.x
      SelfContainedWindows_Node8:
        Test.RuntimeIdentifier: win-x64
        Node.Version: 8.x
      SelfContainedWindows_Node10:
        Test.RuntimeIdentifier: win-x64
        Node.Version: 10.x
      SelfContainedLinux_Node8:
        Test.RuntimeIdentifier: linux-x64
        Node.Version: 8.x
      SelfContainedLinux_Node10:
        Test.RuntimeIdentifier: linux-x64
        Node.Version: 10.x
      SelfContainedMacOs_Node8:
        Test.RuntimeIdentifier: osx-x64
        Node.Version: 8.x
      SelfContainedMacOs_Node10:
        Test.RuntimeIdentifier: osx-x64
        Node.Version: 10.x
  steps:
  - task: NodeTool@0
    displayName: Install Node $(Node.Version)
    inputs:
      versionSpec: $(Node.Version)
  - powershell: |
      test/Cli.FunctionalTests/run-tests.ps1 -ci -CliManifestName $(CliManifestName) -RestoreSources $(PB_RestoreSource) -AccessTokenSuffix '$(AccessTokenSuffix)' -AssetRootUrl $(PB_AssetRootUrl) -ProdConManifestUrl $env:PRODCONMANIFESTURL -TestRuntimeIdentifier $(Test.RuntimeIdentifier) -AdditionalRestoreSources $env:ADDITIONALRESTORESOURCES

    condition: ne(variables['PB_SkipTests'], 'true')
    displayName: Run E2E tests
  - task: PublishTestResults@2
    displayName: Publish test results
    condition: always()
    inputs:
      testRunner: vstest
      testResultsFiles: 'artifacts/logs/**/*.trx'
